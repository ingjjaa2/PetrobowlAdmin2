{"version":3,"sources":["router/PrivateRoute.js","router/PublicRoute.js","helpers/fetchs.js","actions/uiActions.js","actions/authActions.js","components/loading/loadingLine.js","views/login.js","hooks/useForms.js","actions/generalActions.js","views/components/eventsList.js","views/components/roundList.js","views/components/logoFlotante.js","views/eventsList.js","hooks/useModal.js","views/roundSummary.js","router/AppRouter.js","reducers/uiReducer.js","reducers/generalReducer.js","reducers/authReducer.js","store/store.js","petrobowApp.js","index.js"],"names":["PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","baseUrl","fetchSinToken","endpoint","bodyData","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localUserData","localStorage","getItem","almacenado","parse","types","ModalCustom","loadinAction","type","payload","SetDataCustom","RemoveFromState","data","SetData","LoadingLine","active","texto","useState","actual","setactual","useEffect","proceso","setTimeout","clearTimeout","className","iniState","username","code","Login","initialState","values","setValues","target","name","value","e","useForm","state","setstate","dispatch","useDispatch","userWaitingCode","useSelector","auth","ui","loading","validatingToken","a","resp","json","ok","setItem","removeItem","handleChange","src","alt","autoComplete","onChange","onClick","codigo","parseInt","Swal","fire","message","StarGetRoundSummary","idRound","details","loadingSummary","activeRound","activeIdRound","roundSummary","StarGetRoundDetails","loadingRoundDetails","roundDetails","Events","map","x","i","titulo","valor","rounds","length","Item","RoundList","id","teamA","teamB","roundClasification","clasification","LogoFlotante","activo","eventActive","RoundId","other","EventsList","history","useHistory","loadingRoundList","roundList","gen","handleTabsClick","roundActivo","find","push","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","overlay","zIndex","UseModal","modalTagOpen","onCloseModal","ModalBody","openModal","isOpen","onRequestClose","style","closeTimeoutMS","question","RoundSummary","arrowClick","actualValue","newValue","removeGen","removeUi","icon","faBackward","faSync","pregunta","questionDetail","size","faForward","faList","faQuestionCircle","RoundSummaryList","equipoA","participante","respuestas","equipoB","QuestionsList","timesA","respuestaA","tiempo","timesB","respuestaB","fastestA","Math","min","fastestB","handleClickTable","console","log","respuesta","jugador","ModalAnswer","AppRouter","basename","exact","path","rootReducer","combineReducers","action","_state","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PetrobowlApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.568e4d89.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n\n       <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","const baseUrl = \"https://petrobowl-test.herokuapp.com/api\";\n// const baseUrl = \"https://alotest.herokuapp.com/api\";\n\n\nexport const fetchSinToken = (endpoint,bodyData,method='GET')=>{\n\n    const url = `${baseUrl}/${endpoint}`;\n\n\n    if(method==='GET'){\n        return fetch(url);\n    }else{\n        return fetch(url,{\n            method,\n            headers:{\n                'Content-type': 'application/json' \n            },\n            body:  JSON.stringify(bodyData)\n        });\n    }\n}\n\n\nexport const fetchConToken =(endpoint, bodyData, method = 'GET')=>{\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    let token = '';\n    const localUserData = localStorage.getItem('user') || '';\n    \n    if(localUserData!==''){\n        const almacenado = JSON.parse(localUserData);\n        token = almacenado.token;\n    }\n\n    if ( method === 'GET' ) {\n\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( bodyData )\n        });\n    }\n\n\n}","\nexport const types = {\n    uiModalCustom: '[ui] abre o cierra modal',\n    uiSetDataCustom:'[ui] set data custom',\n    uiremoveDataCustom:'[ui] set remove custom',\n}\n\n\nexport const ModalCustom=(loadinAction)=>({\n    type:types.uiModalCustom,\n    payload:loadinAction});\n\nexport const SetDataCustom=(loadinAction)=>({\n    type:types.uiSetDataCustom,\n    payload:loadinAction});\n\nexport const RemoveFromState =(data)=>({\n    type: types.uiremoveDataCustom,\n    payload:data    \n\n});","import {fetchSinToken,fetchConToken} from '../helpers/fetchs';\nimport {SetDataCustom} from './uiActions';\nimport Swal from 'sweetalert2';\n\n\n\nexport const types = {\n\n    //Internal\n    authSetData: '[auth] set data de autentifiacion',\n    authRemoveData: '[auth] remove data de autentifiacion',\n\n}\n\n//Internas \n\nexport const SetData =(data)=>({\n    type: types.authSetData,\n    payload:data    \n\n});\n\nexport const RemoveFromState =(data)=>({\n    type: types.authRemoveData,\n    payload:data    \n\n});\n\n\n///API\n\nexport const StarGetLoginCode = (username)=>{\n\n\n    return async(dispatch)=>{\n\n        const bodyData ={\n            username:username\n        }\n        dispatch(SetDataCustom({loading:true}));\n        const resp = await fetchSinToken(`auth/requestCode`,bodyData,'POST');\n        const body = await resp.json();\n       \n        if(body.ok){\n            dispatch(SetData({userWaitingCode:username}));\n        }else{\n            Swal.fire('Error Requesting Code',body.message,'error');\n        }\n        \n        dispatch(SetDataCustom({loading:false}));\n\n    }\n\n}\n\nexport const StarGetLogin = (username,codigo)=>{\n\n\n    return async(dispatch)=>{\n\n        const bodyData ={\n            username:username,\n            codigo:codigo\n        }\n        dispatch(SetDataCustom({loading:true}));\n        const resp = await fetchSinToken(`auth`,bodyData,'POST');\n        const body = await resp.json();\n       \n        if(body.ok){\n            localStorage.setItem('user',JSON.stringify({token:body.token}));\n            dispatch(SetData({token:body.token}));\n           \n        }else{\n            Swal.fire('Error en validar Usuario',body.message,'error');\n        }\n        \n        dispatch(SetDataCustom({loading:false}));\n\n    }\n\n}\n\nexport const StarRenewToken = ()=>{\n\n\n    return async(dispatch)=>{\n\n        dispatch(SetDataCustom({validatingToken:true}));\n        const resp = await fetchConToken(`auth/renew`);\n        const body = await resp.json();\n\n       if(body.ok){\n            localStorage.setItem('user',JSON.stringify({token:body.token}));\n            dispatch(SetData({token:body.token}));\n        }else{\n            localStorage.removeItem('user');\n        }\n        \n        dispatch(SetDataCustom({validatingToken:false}));\n\n    }\n\n}","import React, { useEffect, useState } from 'react';\n\n\nexport const LoadingLine = ({active=false,texto=\"...Waiting\"}) => {\n\n    \n    const [actual, setactual] = useState(1)\n\n    useEffect(() => {\n        let proceso = setTimeout(() => {\n            if(actual===4){\n                setactual(1);\n            }else{\n                setactual(actual+1);\n            }\n            return ()=>{\n\n            }\n        }, 300);\n\n        return ()=>{\n            clearTimeout(proceso);\n        }\n\n    }, [active,actual])\n\n\n\n    return (\n        <div className=\"loadingExternalContainer\">\n            <div className=\"loadingContainer\">\n                <div className={`${actual===1?\"activeContainer\":\"\"}`}></div>\n                <div className={`${actual===2?\"activeContainer\":\"\"}`}></div>\n                <div className={`${actual===3?\"activeContainer\":\"\"}`}></div>\n                <div className={`${actual===4?\"activeContainer\":\"\"}`}></div>\n            </div>\n            <div className=\"waitingText\">\n                {texto}\n            </div>\n        </div>\n    )\n}\n","import React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {useForm} from '../hooks/useForms';\n\nimport {StarGetLoginCode,StarGetLogin,StarRenewToken} from '../actions/authActions';\n\nimport {LoadingLine} from '../components/loading/loadingLine';\n\n\nconst iniState={\n    username:'',\n    code:'',\n}\n\n\nexport const Login = () => {\n\n    const [state, setstate] = useForm(iniState);\n\n    const dispatch = useDispatch();\n\n    const {userWaitingCode} = useSelector(state => state.auth);\n\n    const {loading,validatingToken} = useSelector(state => state.ui);\n\n    useEffect(() => {\n        const localUserData = localStorage.getItem('user') || '';\n        if(localUserData!==''){\n            dispatch(StarRenewToken());\n        }\n    }, [dispatch]);\n\n\n\n    const handleChange=(e)=>{\n        setstate(e);\n    }\n\n    const handleRequestCode=()=>{\n        dispatch(StarGetLoginCode(state.username))\n    }\n\n    const handleLogin=()=>{\n        dispatch(StarGetLogin(userWaitingCode,parseInt(state.code)));\n    }\n\n    return (\n        <div className=\"backgroundContainer\">\n            <div className=\"containerLoginScreen\">\n            <img src=\"https://github.com/ingjjaa2/PetrobowlAdmin/blob/main/assets/logo_petrobowl.png?raw=true\" className=\"imageCenter\" alt=\"logoAlo\"/>\n            {validatingToken?(\n                <LoadingLine texto=\"validating current User\"/>\n            ):(\n                <Fragment>\n                {!userWaitingCode?(\n                <Fragment>\n                {!loading?(\n                    <Fragment>\n                    <h3 className=\"centerText\">Enter the UserName to Login</h3>\n                    <div className=\"form-group\">\n                        <input\n                        type=\"text\"\n                        className=\"form-control \"\n                        autoComplete=\"off\"\n                        name=\"username\"\n                        value={state.username}\n                        onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"button\" onClick={handleRequestCode}>\n                        <span className=\"\">Request Code</span>\n                    </div>\n                    </Fragment>\n                ):(\n                    <LoadingLine/>\n                )}\n                </Fragment>\n            ):(\n                <Fragment>\n                  {!loading?(\n                  <Fragment>\n                    <h3 className=\"centerText\">Introduce the code send to your email</h3>\n                    <div className=\"form-group\">\n                        <input\n                        type=\"number\"\n                        className=\"form-control \"\n                        autoComplete=\"off\"\n                        name=\"code\"\n                        value={state.code}\n                        onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"button\" onClick={handleLogin}>\n                        <span className=\"\">Login</span>\n                    </div>\n                    </Fragment>\n                ):(\n                    <LoadingLine/>\n                )}\n\n                </Fragment>\n            )}\n                </Fragment>\n            )}\n           </div>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {}) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (e) => {\n        if(e===null){\n            setValues( initialState );\n        }else{\n            setValues( e );\n        }\n\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n   }\n\n    return [ values, handleInputChange, reset ];\n\n}","import {fetchConToken} from '../helpers/fetchs';\nimport {SetDataCustom} from './uiActions';\nimport Swal from 'sweetalert2';\n\n\nexport const types = {\n\n    //Internal\n    genSetData: '[gen] set data de general',\n    genRemoveData: '[gen] remove data de general',\n\n}\n\n//Internas \n\nexport const SetData =(data)=>({\n    type: types.genSetData,\n    payload:data    \n\n});\n\nexport const RemoveFromState =(data)=>({\n    type: types.genRemoveData,\n    payload:data    \n\n});\n\nexport const StarGetRoundsList = ()=>{\n\n\n    return async(dispatch)=>{\n\n        dispatch(SetDataCustom({loadingRoundList:true}));\n        const resp = await fetchConToken(`/`);\n        const body = await resp.json();\n       \n        if(body.ok){\n            dispatch(SetData({roundList:body.data}));\n        }else{\n            Swal.fire('Error en renovar Usuario',body.message,'error');\n        }\n        dispatch(SetDataCustom({loadingRoundList:false}));\n\n\n    }\n\n}\n\nexport const StarGetRoundSummary = (idRound, details)=>{\n\n\n    return async(dispatch)=>{\n\n        dispatch(SetDataCustom({loadingSummary:true}));\n        dispatch(SetDataCustom({activeRound:details}));\n        dispatch(SetDataCustom({activeIdRound:idRound}));\n        const resp = await fetchConToken(`resumen/${idRound}`);\n        const body = await resp.json();\n       \n        if(body.ok){\n            dispatch(SetData({roundSummary:body.data}));\n        }else{\n            Swal.fire('Error en renovar Usuario',body.message,'error');\n        }\n        dispatch(SetDataCustom({loadingSummary:false}));\n\n\n    }\n\n}\n\nexport const StarGetRoundDetails = (idRound)=>{\n\n\n    return async(dispatch)=>{\n\n        dispatch(SetDataCustom({loadingRoundDetails:true}));\n        const resp = await fetchConToken(`/${idRound}`);\n        const body = await resp.json();\n       \n        if(body.ok){\n            dispatch(SetData({roundDetails:body.data}));\n        }else{\n            Swal.fire('Error en renovar Usuario',body.message,'error');\n        }\n        dispatch(SetDataCustom({loadingRoundDetails:false}));\n\n\n    }\n\n}","import React, { Fragment } from 'react'\n\n\nexport const Events = ({data=[],onClick}) => {\n\n    return (\n        <Fragment>\n            <div className=\"infoContainer\">\n                {data.map((x,i)=>\n                    <span onClick={()=>onClick(i)} key={i}>\n                         <Item \n                         titulo={x.name} \n                         valor={x.rounds.length}\n                        />\n                    </span>\n\n                )}\n            </div>\n\n           \n        </Fragment>\n\n    )\n}\n\nconst Item=({titulo='',valor=0})=>{\n\n    return(\n        <div className=\"itemContainer\" >\n            <span> {titulo} </span>\n            <span> {valor} </span>\n        </div>\n    );\n\n}","import React from 'react'\n\nexport const RoundList = ({data=[],onClick}) => {\n    return (\n        <div className=\"infoContainer\">\n            {data.map((x,i)=>\n                <span onClick={()=>onClick(x.id)} key={i}>\n                     <Item \n                        teamA={x.teamA}\n                        teamB={x.teamB}\n                        roundClasification={x.clasification}\n                    />\n                </span>\n\n            )}\n        </div>\n    )\n}\n\nexport const Item=({teamA='',teamB='',roundClasification=''})=>{\n\n    return(\n        <div className=\"itemContainer round\" >\n            <span className=\"separatorContainer\"> {roundClasification} </span>\n            <span> {teamA} </span>\n            <span className=\"separatorContainer\"> VS </span>\n            <span> {teamB} </span>\n        </div>\n    );\n\n}","import React from 'react'\n\nexport const LogoFlotante = () => {\n    return (\n            <img src=\"https://github.com/ingjjaa2/PetrobowlAdmin/blob/main/assets/logo_petrobowl.png?raw=true\" className=\"logoFlotante\" alt=\"logoAlo\"/>\n    )\n}\n","import React,{Fragment, useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector} from 'react-redux';\nimport {StarGetRoundsList, StarGetRoundSummary,StarGetRoundDetails} from '../actions/generalActions';\n\nimport {Events} from './components/eventsList';\nimport {RoundList} from './components/roundList';\n\nimport {LoadingLine} from '../components/loading/loadingLine';\n\nimport {LogoFlotante} from './components/logoFlotante';\n\n\n\nconst initialState ={\n    activo:\"Events List\",\n    eventActive:null,\n    RoundId:null,\n    other:null\n}\n\n\nexport const EventsList = () => {\n\n    const [state, setstate] = useState(initialState);\n\n    const dispatch = useDispatch();\n\n    let history = useHistory();\n\n    useEffect(() => {\n        dispatch(StarGetRoundsList());\n    }, [dispatch]);\n\n    const {roundList} = useSelector(state => state.gen);\n    \n    const handleTabsClick=(e)=>{\n        switch (e) {\n            case \"events\":\n                setstate(initialState)\n                break;\n            case \"roundList\":\n                setstate({\n                    ...state,\n                    activo:\"Events List\",\n                    RoundId:null\n                })\n                break\n            case \"roundDetails\":\n                setstate({\n                    ...state,\n                    activo:\"Round List\",\n                    other:null\n                })\n                break\n            default:\n                break\n        \n        }\n    }\n\n    const handleEventClick =(e)=>{\n\n        setstate({\n            ...state,\n            activo:\"Round List\",\n            eventActive:roundList[e]\n        })\n    }\n\n    const handleRoundClick=(e)=>{\n\n        const roundActivo = state.eventActive.rounds.find(x=>x.id===e);\n\n        const roundDetails = `${roundActivo.clasification} - ${roundActivo.teamA} - ${roundActivo.teamB}`;\n\n        dispatch(StarGetRoundSummary(e,roundDetails));\n        dispatch(StarGetRoundDetails(e));\n\n        setstate({\n            ...state,\n            activo:\"Round Summary\",\n            RoundId:e\n        });\n\n        history.push(\"/round\");\n    }\n\n        return (\n            <Fragment>\n            <div className=\"backgroundContainer\">\n                <div className=\"mainConatainer\">\n                    {roundList?(\n                    <Fragment>\n                        <div className=\"headerText\">{state.activo}</div>\n                        <div className=\"headerTabs\">\n                        <span className={`button tab`} onClick={()=>handleTabsClick(\"events\")}>Events List</span>\n                        <span className={`button tab ${state.eventActive===null&&\"unactive\"}`} onClick={()=>handleTabsClick(\"roundList\")}>Round List</span>\n                        </div>\n                            {state.eventActive===null&&(\n                                <Events \n                                data={roundList}\n                                onClick={handleEventClick}\n                                />\n                            )}\n                            {state.eventActive!==null&&(\n                                <RoundList \n                                data={state.eventActive.rounds}\n                                onClick={handleRoundClick}\n                                />\n                            )}\n    \n                    </Fragment>\n    \n                    ):(\n                        <LoadingLine/>\n                    )}\n    \n                </div>\n\n            <LogoFlotante/>\n            </div>\n            </Fragment>\n\n    \n        )\n\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'\n\nModal.setAppElement('#root');\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)',\n    },\n    overlay :{\n      zIndex                :1000\n    }\n\n};\n\n\n\nconst UseModal = ({modalTagOpen=\"\",onCloseModal,ModalBody}) => {\n\n    const uiState = useSelector(state => state.ui);\n\n    const openModal = uiState[modalTagOpen];\n\n\n    return (\n        <Modal\n            isOpen={openModal}\n            onRequestClose={onCloseModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n        >\n            <div>\n                {(ModalBody!==null)\n                ?<ModalBody/>\n                :(<div>`No hay data para mostrar [ ${modalTagOpen} ]`</div>\n                )}\n            </div>\n        </Modal>\n    )\n}\n\n\n\nUseModal.propTypes = {\n    onCloseModal: PropTypes.func.isRequired,\n    modalTagOpen: PropTypes.string.isRequired,\n    ModalBody: PropTypes.func.isRequired\n}\n\nexport default UseModal\n\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faBackward, faSync, faList, faQuestionCircle,faForward} from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {LoadingLine} from '../components/loading/loadingLine';\nimport {RemoveFromState as removeGen} from '../actions/generalActions';\nimport {RemoveFromState as removeUi} from '../actions/uiActions';\nimport { useHistory } from 'react-router-dom';\nimport {StarGetRoundSummary,StarGetRoundDetails} from '../actions/generalActions';\nimport {LogoFlotante} from './components/logoFlotante';\nimport UseModal from '../hooks/useModal';\nimport {ModalCustom,RemoveFromState} from '../actions/uiActions';\n\nconst initialState={\n    active:0,\n    question:0\n}\n\n\nexport const RoundSummary = () => {\n\n    const [state, setstate] = useState(initialState);\n\n    const dispatch = useDispatch();\n\n    let history = useHistory();\n\n    const {activeRound,activeIdRound} = useSelector(state => state.ui);\n    const {roundSummary,roundDetails} = useSelector(state => state.gen);\n\n    const handleClickBack=()=>{\n        dispatch(removeGen(\"roundSummary\"));\n        dispatch(removeUi(\"activeRound\"));\n        dispatch(removeGen(\"roundDetails\"));\n        history.push(\"/events\");\n        \n    }\n\n    const handleClickUpdate=()=>{\n        dispatch(StarGetRoundSummary(activeIdRound,activeRound));\n        dispatch(StarGetRoundDetails(activeIdRound));\n    }\n\n    const handleTabsClick=(e)=>{\n        setstate({\n            ...state,\n            active:e\n        });\n    }\n\n    const arrowClick=(e)=>{\n\n        let actualValue = 0;\n\n        if(e===\"back\"){\n            actualValue=-1;\n        }\n\n        if(e===\"next\"){\n            actualValue=1;\n        }\n\n        const newValue = parseInt(state.question) + parseInt(actualValue);\n\n        if(newValue>=0&&newValue<roundDetails.length){\n        setstate({\n            ...state,\n            question:newValue\n        });\n        }\n\n\n    }\n\n    return (\n        <Fragment>\n            {(!roundSummary||!roundDetails)?(\n                <LoadingLine/>\n            ):(\n                <div className=\"roundSummaryContainer\">\n\n                    <div className=\"RoundSumaryHeader\">\n                        <span className=\"roundNameContainer\">\n                            <span className=\"iconButton\" onClick={()=>handleClickBack()}><FontAwesomeIcon icon={faBackward}/></span>\n                            <span>{activeRound} - {activeIdRound} </span>\n                            <span className=\"iconButton\" onClick={()=>handleClickUpdate()}><FontAwesomeIcon icon={faSync}/></span>\n                        </span>\n                    </div>\n                    {state.active!==0&&(\n                    <div className=\"preguntaContainer\">\n                        <span className=\"preguntaInternalContainer\">{roundDetails[state.question].pregunta}</span>\n                    </div>)}\n                    \n                    <div className=\"roundSummaryInfo\">\n                        {state.active===0?(\n                            <RoundSummaryList roundSummary={roundSummary}/>\n                        ):(\n                            <QuestionsList questionDetail={roundDetails[state.question]}/>\n                        )}\n                        \n                    </div>\n\n                    {state.active!==0&&(\n                    <div className=\"roundSummaryArrowContainer\">\n                        <span className=\"arrow left\" onClick={()=>arrowClick(\"back\")}> <FontAwesomeIcon icon={faBackward} size=\"2x\"/> </span>\n                         <span className=\"activeQuestion\">{state.question+1}</span>\n                        <span className=\"arrow right\" onClick={()=>arrowClick(\"next\")}> <FontAwesomeIcon icon={faForward} size=\"2x\"/> </span>\n                    </div>)}\n\n                    <div className=\"pageRounSummary_tabsContainer\">\n                        <span className={`pageTabs ${state.active===0&&\"active\"}`} onClick={()=>handleTabsClick(0)}>\n                            <FontAwesomeIcon icon={faList} size=\"2x\"/>\n                        </span>\n                        <span className={`pageTabs ${state.active===1&&\"active\"}`} onClick={()=>handleTabsClick(1)}>\n                            <FontAwesomeIcon icon={faQuestionCircle} size=\"2x\"/>\n                        </span>\n                    </div>\n                \n                    <LogoFlotante/>\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\n\nconst RoundSummaryList=({roundSummary})=>{\n\n    return (\n        <Fragment>\n            <span className=\"roundSummaryTeamA\">{\n                <Fragment>\n                    <span className=\"headerTeamName\">Team A</span>\n                    {roundSummary.equipoA.map((x,i)=>\n                       <span key={i}>\n                           <Item id={x.id} titulo={x.participante} valor={x.respuestas} key={i}/>\n                       </span>\n                    )}\n                </Fragment>\n             }</span>\n                <span></span>\n                <span className=\"roundSummaryTeamB\">{\n                    <Fragment>\n                        <span className=\"headerTeamName\">Team B</span>\n                        {roundSummary.equipoB.map((x,i)=>\n                        <span key={i}>\n                            <Item id={x.id} titulo={x.participante} valor={x.respuestas} key={i}/>\n                        </span>\n                        )}\n                    </Fragment>\n                }</span>\n        </Fragment>\n    );\n\n}\n\n\nconst QuestionsList=({questionDetail})=>{\n\n    const dispatch = useDispatch();\n\n    const timesA = questionDetail.respuestaA.map(x=>x.tiempo);\n    const timesB = questionDetail.respuestaB.map(x=>x.tiempo);\n\n    const fastestA = timesA.length>0?Math.min(...timesA):999999;\n\n    const fastestB = timesB.length>0?Math.min(...timesB):999999;\n\n    const handleOnCloseModal =()=>{\n        dispatch(ModalCustom({name:\"AnswerModal\",value:false}));  \n        dispatch(RemoveFromState(\"AnswerModal\"));\n    }\n\n    const handleClickTable = (e)=>{\n        console.log(\"En Funcion\");\n\n       dispatch(ModalCustom({name:\"AnswerModal\",value:true,data:e}));\n   }\n\n\n    return (\n        <Fragment>\n\n            <span className=\"roundSummaryTeamA\">{\n                <Fragment>\n                    <span className={`headerTeamName ${fastestA<fastestB&&\"fastest\"}`}>Team A</span>\n                    {questionDetail.respuestaA.map((x,i)=>\n                       <span key={i} onClick={()=>handleClickTable(x.respuesta)}>\n                           <Item \n                           id={x.id} \n                           titulo={x.jugador} \n                           valor={x.tiempo} \n                           active={x.tiempo===fastestA?true:false}\n                           key={i}/>\n                       </span>\n                    )}\n                </Fragment>\n             }</span>\n             \n            <span></span>\n            \n            <span className=\"roundSummaryTeamB\">{\n                    <Fragment>\n                        <span className={`headerTeamName ${fastestA>fastestB&&\"fastest\"}`}>Team B</span>\n                        {questionDetail.respuestaB.map((x,i)=>\n                        <span key={i} onClick={()=>handleClickTable(x.respuesta)}>\n                            <Item \n                            id={x.id} \n                            titulo={x.jugador} \n                            valor={x.tiempo} \n                            active={x.tiempo===fastestB?true:false}\n                            key={i}/>\n                        </span>\n                        )}\n                    </Fragment>\n                }</span>\n        \n            \n        <UseModal onCloseModal={handleOnCloseModal} modalTagOpen=\"AnswerModal\" ModalBody={ModalAnswer}/>\n\n        </Fragment>\n    );\n}\n\n\nconst Item=({id='',titulo='',valor=0, active=false})=>{\n\n    return(\n        <div className={`itemContainer player ${active&&\"fastest\"}`} >\n            <span > {id} </span>\n            <span className=\"ml-5\"> {titulo} </span>\n            <span className=\"separatorContainer small\"> {valor} </span>\n        </div>\n    );\n\n}\n\nconst ModalAnswer=({respuesta='La respuest es'})=>{\n\n    const {data} = useSelector(state => state.ui);\n\n\n    return (\n        <div>\n            {data}\n        </div>\n    );\n}","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\n  import {PrivateRoute} from './PrivateRoute';\n  import {PublicRoute} from './PublicRoute';\n\n  import {Login} from '../views/login';\n  import {EventsList} from '../views/eventsList';\n  import {RoundSummary} from '../views/roundSummary';\n\n\n  export const AppRouter = () => {\n\n    const checking = false;\n\n    const {token} = useSelector(state => state.auth);\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router basename=\"/PetrobowlAdmin\">\n            <div>\n                <Switch>\n\n                    <PublicRoute\n                        exact \n                        path=\"/login\" \n                        component={ Login }\n                        isAuthenticated={ !!token }\n                    />\n\n                    <PrivateRoute\n                        exact \n                        path=\"/events\" \n                        component={EventsList} \n                        isAuthenticated={ !!token }\n                    />\n\n                    <PrivateRoute\n                        exact \n                        path=\"/round\" \n                        component={RoundSummary} \n                        isAuthenticated={ !!token }\n                    />\n\n                    <Redirect to=\"/events\" />   \n                </Switch>\n            </div>\n        </Router>\n    );\n\n  }","import {types} from '../actions/uiActions';\n\nconst initialState = {}\n\nexport const uiReducer = (state=initialState,action)=>{\n\n    switch (action.type) {\n        case types.uiModalCustom:\n            \n          return {\n              ...state,\n              [ action.payload.name ]: action.payload.value,\n              data:action.payload.data\n              }\n\n        case types.uiSetDataCustom:\n            \n        return {\n            ...state,\n            ...action.payload\n        }\n\n        case types.uiremoveDataCustom:\n\n            \n            const _state = state;\n            \n            delete _state[action.payload];\n            \n            return {\n                 ..._state,\n            }\n    \n    \n        default:\n            return state;\n    }\n\n}\n","import {types} from '../actions/generalActions';\n\nconst initialState = {}\n\n\nexport const genReducer = (state=initialState,action)=>{\n\n    switch (action.type) {\n\n        case types.genSetData:\n            return {\n                ...state,\n                ...action.payload\n            }\n        \n        case types.genRemoveData:\n\n            const _state = state;\n            \n            delete _state[action.payload];\n\n            return {\n                 ..._state,\n            }\n    \n        default:\n            return state;\n    }\n\n\n\n}","import {types} from '../actions/authActions';\n\nconst initialState = {}\n\nexport const authReducer = (state=initialState,action)=>{\n\n    switch (action.type) {\n\n        case types.authSetData:\n            return {\n                ...state,\n                ...action.payload\n            }\n        \n        case types.authRemoveData:\n\n            const _state = state;\n            \n            delete _state[action.payload];\n\n            return {\n                 ..._state,\n            }\n    \n        default:\n            return state;\n    }\n\n}","import {createStore,compose,applyMiddleware,combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport {uiReducer} from '../reducers/uiReducer';\nimport {genReducer} from '../reducers/generalReducer';\nimport {authReducer} from '../reducers/authReducer';\n\nexport const rootReducer = combineReducers({\n    ui:uiReducer,\n    auth:authReducer,\n    gen:genReducer\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {AppRouter} from './router/AppRouter';\nimport {store} from './store/store';\n\nexport const PetrobowlApp = ()=>{\n    return (\n        <Provider store={store}>\n\n            <AppRouter/>\n            \n        </Provider>\n    )\n}","\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport  {PetrobowlApp} from './petrobowApp';\n\n\nReactDOM.render(\n  <PetrobowlApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}